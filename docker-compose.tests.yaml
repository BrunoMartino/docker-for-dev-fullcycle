include:
  # inclui arquivos docker-compose para subir no mesmo comando up
  # arquivos no include são colocados dentro da mesma rede, não precisando mais do extra_host
  - ./external-api/docker-compose.external-api.yaml

services:
  web1:
    extends:
      file: docker-compose.common.yaml
      service: web
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy

  db:
    #  evite de usar versões latest em produção ou desenvolvimento
    #  poderia usar um env_file para trazer mais dinamismo
    image: mysql:8.0.30-debian
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_database
    tmpfs: # usa uma instalação na propria memoria para reduzir o tempo de montagem em testes. não pode ser usado para trabalho
      - /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s # interval - com que frequência o healthcheck é executado
      timeout: 5s # timeout - quanto tempo esperar antes de considerar o healthcheck falhado
      retries: 5 # retries - número de tentativas antes de considerar o container como falhado
      # start_period - tempo de espera antes de iniciar o healthcheck
      # ou seja, o healthcheck será executado a cada 30 segundos, com um timeout de 5 segundos, 5 tentativas e um tempo de espera inicial de 10 segundos
      start_period: 10s
    # networks:
    #   - external-api_default
# networks:
#   external-api_default:
#     external: true

# para host.docker.internal

# mac ou linux (/etc/hosts)
# windows (C:\Windows\System32\drivers\etc\hosts) (não editar no wsl)

# 127.0.0.1 host.docker.internal
